<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="3000">
    <contextName>A</contextName>

    <!--读取配置中心的属性
    <springProperty scope="context" name="LOG_HOME" source="logback.data.home"
                    defaultValue="logs/template/mybatisplus"></springProperty>
    <springProperty scope="context" name="DEFAULT_PATTERN" source="logback.data.default.pattern"></springProperty>
    <springProperty scope="context" name="LEVEL" source="logging.level.root"></springProperty>

    <springProperty scope="context" name="CONSOLE_PATTERN" source="logback.data.console.pattern"></springProperty>
    <springProperty scope="context" name="LOG_FILE_EXPIRE_TIME" source="logback.data.file.expireTime"></springProperty>
    -->

    <!-- 本地固定配置  -->
    <property name="LOG_HOME" value="var/logs/javalog/"/>
    <property name="DEFAULT_PATTERN"
              value="%d %-5level [%X{ctxTraceId}][%X{ctxEventId}][%thread] %logger{5} - %msg%n"/>
    <property name="LEVEL" value="debug"/>

    <property name="CHARSET" value="UTF-8"/>
    <property name="SSL" value="true" />

    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>${LEVEL}</level>
        </filter>
        <encoder>
            <pattern>[%-5level] %date{HH:mm:ss.SSS} [%X{ctxTraceId}][%X{ctxEventId}][%thread] %logger{36} - %msg%n
            </pattern>
        </encoder>
    </appender>

    <appender name="ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}/error.log</file>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/%d{yyyyMMdd}/error.log</fileNamePattern>
            <maxHistory>30</maxHistory>
            <cleanHistoryOnStart>true</cleanHistoryOnStart>
        </rollingPolicy>
        <encoder>
            <pattern>${DEFAULT_PATTERN}</pattern>
            <charset>${CHARSET}</charset>
        </encoder>
    </appender>

    <appender name="SERVICE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}/service.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/%d{yyyyMMdd}/service.log</fileNamePattern>
            <maxHistory>30</maxHistory>
            <cleanHistoryOnStart>true</cleanHistoryOnStart>
        </rollingPolicy>
        <encoder>
            <pattern>${DEFAULT_PATTERN}</pattern>
            <charset>${CHARSET}</charset>
        </encoder>
    </appender>


    <logger name="ch.qos.logback" level="ERROR" additivity="false">
        <appender-ref ref="ERROR"/>
    </logger>
    <logger name="com.whosly.rapid" level="${LEVEL}" additivity="false">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="SERVICE"/>
        <appender-ref ref="ERROR"/>
    </logger>

    <root level="ROOT">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="SERVICE"/>
        <appender-ref ref="ERROR"/>
    </root>

    <!--
    <logger>用来设置某一个包或者具体的某一个类的日志打印级别、
         以及指定<appender>。<logger>仅有一个name属性，
         一个可选的level和一个可选的addtivity属性。
         name:用来指定受此logger约束的某一个包或者具体的某一个类。
         level:用来设置打印级别，大小写无关：TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF，
         还有一个特俗值INHERITED或者同义词NULL，代表强制执行上级的级别。
         如果未设置此属性，那么当前logger将会继承上级的级别。
         addtivity:是否向上级logger传递打印信息。默认是true。
    -->

    <!--
    root节点是必选节点，用来指定最基础的日志输出级别，只有一个level属性。
        level:用来设置打印级别，大小写无关：TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF，
        不能设置为INHERITED或者同义词NULL。默认是DEBUG
        可以包含零个或多个元素，标识这个appender将会添加到这个logger。
    -->

</configuration>